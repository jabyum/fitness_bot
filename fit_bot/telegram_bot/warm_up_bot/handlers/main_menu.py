from ..loader import bot
from telebot.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, InlineKeyboardMarkup, \
    InlineKeyboardButton
from telebot.handler_backends import State, StatesGroup
from telebot.storage import memory_storage
from telebot.types import CallbackQuery
from telebot import custom_filters
import sqlite3
from datetime import datetime
import os


class States(StatesGroup):
    START = State()
    enter_name = State()
    confirm_name = State()
    enter_phone = State()
    enter_age = State()
    enter_gender = State()
    enter_weight = State()
    enter_height = State()
    enter_activity_level = State()
    describe_problem = State()
    ask_place = State()


def get_id(message):
    return message.from_user.id, message.chat.id


def get_cursor():
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    return conn, cursor


ADMINS = [305896408, 58790442]


@bot.message_handler(commands=['start'])
def start_message(message: Message):
    try:
        conn, cursor = get_cursor()
        user_id, chat_id = get_id(message)
        cursor.execute('INSERT OR IGNORE INTO Users (user_id, username, last_interaction_time)'
                       ' VALUES (?, ?, ?)',
                       [user_id, message.from_user.username, datetime.now().strftime('%Y-%m-%d %H:%M:%S')])
        conn.commit()
        bot.set_state(user_id, States.enter_name, chat_id)

        official_photo = 'AgACAgIAAxkBAAMbZIICG7vmPW-HF4upkh_vcE8ow-EAAjHLMRu1rxFIeBaekTZNgEABAAMCAAN5AAMvBA'

        test_photo = 'AgACAgIAAxkBAAIGR2Sv1Uk93knxY0H7wKfepuWuqQYHAAIcyjEbIj6ASRetg2wa3ugqAQADAgADeQADLwQ'

        sent_message = bot.send_photo(user_id,
                                      photo=official_photo,
                                      caption=f'üëã –ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç –õ–∏–∑–∞\n\n'
                                              f'–Ø - –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ò–±—Ä–∞—Ç–∞, '
                                              f'–≥–æ—Ç–æ–≤–∞ –ø—Ä–∏–Ω—è—Ç—å –≤–∞—à—É –∑–∞—è–≤–∫—É –Ω–∞ –ª–∏—á–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É!\n\n'
                                              f'üëÄ *–ö—Å—Ç–∞—Ç–∏, –∫–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?*\n\n'
                                              f'(–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è)', reply_markup=ReplyKeyboardRemove(),
                                      parse_mode='Markdown')
        cursor.execute('UPDATE Users SET last_bot_message_id = ?, last_bot_message_type = ? WHERE user_id = ?',
                       [sent_message.message_id, 'photo', user_id])
        conn.commit()
    except Exception as E:
        bot.send_message(305896408, f'–û—à–∏–±–∫–∞! {E}')


@bot.message_handler(state=States.enter_name)
def get_name(message: Message):
    try:
        user_id, chat_id = get_id(message)
        conn, cursor = get_cursor()
        name = message.text
        now = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
        cursor.execute('UPDATE Users SET last_interaction_time = ?, name = ? WHERE user_id = ?',
                       [now, name, user_id])
        conn.commit()
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω', request_contact=True)
        markup.row(button1)
        text = f'*–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {name} ‚ù£Ô∏è*\n\n' \
               '–ê —Ç–µ–ø–µ—Ä—å –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, *—Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞*, —á—Ç–æ–±—ã –ò–±—Ä–∞—Ç –º–æ–≥ –ª–∏—á–Ω–æ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è!\n\n' \
               '(–ñ–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é)'

        official_photo = 'AgACAgIAAxkBAAMeZIICMjDIy9mEldb9Joai0xPTt9sAAjLLMRu1rxFIjQX2LKMoskkBAAMCAAN5AAMvBA'
        test_photo = 'AgACAgIAAxkBAAIGVWSv1cFu58hHJdZl8cjMjH9da9SDAAIeyjEbIj6ASVLJQRLgg1q5AQADAgADeQADLwQ'

        sent_message = bot.send_photo(user_id,
                                      photo=official_photo,
                                      caption=text,
                                      reply_markup=markup, parse_mode='Markdown')
        cursor.execute('UPDATE Users SET last_bot_message_id = ?, last_bot_message_type = ? WHERE user_id = ?',
                       [sent_message.message_id, 'photo', user_id])
        conn.commit()
        bot.set_state(user_id, States.enter_phone, chat_id)
    except Exception as E:
        bot.send_message(305896408, f'–û—à–∏–±–∫–∞! {E}')


@bot.message_handler(state=States.enter_phone, content_types=['contact'])
def get_age(message: Message):
    try:
        markup = ReplyKeyboardMarkup()
        ReplyKeyboardRemove()
        user_id, chat_id = get_id(message)
        conn, cursor = get_cursor()
        now = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

        if message.contact is not None:
            number = message.contact.phone_number
            cursor.execute('UPDATE Users SET last_interaction_time = ?, phone = ? WHERE user_id = ?',
                           [now, number, user_id])
            conn.commit()
            sent_message = bot.send_message(text='üìûüî• –ò–±—Ä–∞—Ç –Ω–∞ —Å–≤—è–∑–∏, —Å–∫–æ—Ä–µ–µ —Å–ª—É—à–∞–π—Ç–µ –∞—É–¥–∏–æ!', chat_id=chat_id,
                                            reply_markup=ReplyKeyboardRemove())
            cursor.execute('UPDATE Users SET last_bot_message_id = ? WHERE user_id = ?', [sent_message.message_id, user_id])
            conn.commit()
            markup = InlineKeyboardMarkup()
            button1 = InlineKeyboardButton(text='–ü–æ–≥–Ω–∞–ª–∏!', callback_data='Go!')
            markup.add(button1)

            official_voice = 'AwACAgIAAxkBAAMxZIIFR-7JoIy9uE1RX4AYTdcsEYUAAkMsAALdyQABSEj14zqmpCufLwQ'
            test_voice = 'AwACAgIAAxkBAAIGX2Sv1v9RRi84ysKVeLX4MZ5GvvngAAJDLAAC3ckAAUg2ON27vliZXC8E'

            sent_message = bot.send_voice(chat_id,
                                          voice=official_voice,
                                          reply_markup=markup)
            cursor.execute('UPDATE Users SET last_bot_message_id = ?, last_bot_message_type = ? WHERE user_id = ?',
                           [sent_message.message_id, 'voice', user_id])
            conn.commit()

        else:
            sent_message = bot.send_message(user_id, '–ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ')
            cursor.execute('UPDATE Users SET last_bot_message_id = ?, last_bot_message_type = ? WHERE user_id = ?',
                           [sent_message.message_id, 'text', user_id])
            conn.commit()
    except Exception as E:
        bot.send_message(305896408, f'–û—à–∏–±–∫–∞! {E}')


@bot.callback_query_handler(state=States.enter_phone, func=lambda call: call.data == 'Go!')
def start_test(call: CallbackQuery):
    user_id = call.from_user.id
    chat_id = call.message.chat.id
    conn, cursor = get_cursor()
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = KeyboardButton('–ú')
    button2 = KeyboardButton('–ñ')
    markup.row(button1, button2)
    sent_message = bot.send_message(user_id, 'üìå *–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª:*\n\n–ú/–ñ:', reply_markup=markup, parse_mode='Markdown')
    cursor.execute('UPDATE Users SET last_bot_message_id = ?, last_bot_message_type = ? WHERE user_id = ?',
                   [sent_message.message_id, 'text', user_id])
    conn.commit()
    bot.set_state(user_id, States.enter_gender, chat_id)


@bot.message_handler(state=States.enter_gender)
def get_gender(message: Message):
    try:
        user_id, chat_id = get_id(message)
        conn, cursor = get_cursor()
        text = message.text.lower()
        now = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

        if text in ['–º', '–∂']:
            gender = text
            cursor.execute('UPDATE Users SET last_interaction_time = ?, gender = ? WHERE user_id = ?',
                           [now, gender, user_id])
            conn.commit()
            sent_message = bot.send_message(user_id, 'üìå *–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç:*\n\n'
                                                     '(–¢–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—É):', reply_markup=ReplyKeyboardRemove(),
                                            parse_mode='Markdown')
            cursor.execute('UPDATE Users SET last_bot_message_id = ?, last_bot_message_type = ? WHERE user_id = ?',
                           [sent_message.message_id, 'text', user_id])
            conn.commit()

            bot.set_state(user_id, States.enter_age, chat_id)
        else:
            sent_message = bot.send_message(user_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–æ–ª (–ú/–ñ).')
            cursor.execute('UPDATE Users SET last_bot_message_id = ?, last_bot_message_type = ? WHERE user_id = ?',
                           [sent_message.message_id, 'text', user_id])
            conn.commit()
    except Exception as E:
        bot.send_message(305896408, f'–û—à–∏–±–∫–∞! {E}')


@bot.message_handler(state=States.enter_age)
def get_gender(message: Message):
    try:
        conn, cursor = get_cursor()
        user_id, chat_id = get_id(message)
        now = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

        age = message.text

        if age.isdigit() and 13 < int(age) < 71:
            cursor.execute('UPDATE Users SET last_interaction_time = ?, age = ? WHERE user_id = ?',
                           [now, int(age), user_id])
            conn.commit()
            sent_message = bot.send_message(user_id, 'üìå *–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–µ—Å:*\n\n(–¢–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—É –≤ –∫–≥):',
                                            reply_markup=ReplyKeyboardRemove(), parse_mode='Markdown')
            cursor.execute('UPDATE Users SET last_bot_message_id = ?, last_bot_message_type = ? WHERE user_id = ?',
                           [sent_message.message_id, 'text', user_id])
            conn.commit()

            bot.set_state(user_id, States.enter_weight, chat_id)
        else:
            sent_message = bot.send_message(user_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç '
                                                     '(—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—É –æ—Ç 14 –¥–æ 70).')
            cursor.execute('UPDATE Users SET last_bot_message_id = ?, last_bot_message_type = ? WHERE user_id = ?',
                           [sent_message.message_id, 'text', user_id])
            conn.commit()
    except Exception as E:
        bot.send_message(305896408, f'–û—à–∏–±–∫–∞! {E}')


@bot.message_handler(state=States.enter_weight)
def get_weight(message: Message):
    try:
        conn, cursor = get_cursor()
        user_id, chat_id = get_id(message)
        text = message.text
        now = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

        if text.isdigit() and 29 < int(text) < 251:
            weight = int(text)
            cursor.execute('UPDATE Users SET last_interaction_time = ?, weight = ? WHERE user_id = ?',
                           [now, weight, user_id])
            conn.commit()
            sent_message = bot.send_message(user_id, 'üìå *–£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç:*\n\n(–¢–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—É –≤ —Å–º):',
                                            reply_markup=ReplyKeyboardRemove(), parse_mode='Markdown')
            cursor.execute('UPDATE Users SET last_bot_message_id = ?, last_bot_message_type = ? WHERE user_id = ?',
                           [sent_message.message_id, 'text', user_id])
            conn.commit()

            bot.set_state(user_id, States.enter_height, chat_id)
        else:
            sent_message = bot.send_message(user_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–µ—Å –æ—Ç 30 –¥–æ 250 (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ).')
            cursor.execute('UPDATE Users SET last_bot_message_id = ?, last_bot_message_type = ? WHERE user_id = ?',
                           [sent_message.message_id, 'text', user_id])
            conn.commit()
    except Exception as E:
        bot.send_message(305896408, f'–û—à–∏–±–∫–∞! {E}')


activity_levels = {1: '–ú–∞–ª–æ–ø–æ–¥–≤–∏–∂–Ω—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ (—Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–µ—Ç / —Ç—Ä–µ–Ω–∏—Ä—É—é—Å—å –æ—á–µ–Ω—å —Ä–µ–¥–∫–æ)',
                   2: '–ù–µ–±–æ–ª—å—à–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (1-3 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –Ω–µ–¥–µ–ª—é)',
                   3: '–£–º–µ—Ä–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (3-5 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –Ω–µ–¥–µ–ª—é)',
                   4: '–í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (6-7 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –Ω–µ–¥–µ–ª—é)',
                   5: '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (—Ç—è–∂–µ–ª—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 6-7 –¥–Ω–µ–π –≤ –Ω–µ–¥–µ–ª—é)'}


@bot.message_handler(state=States.enter_height)
def get_height(message: Message):
    try:
        user_id, chat_id = get_id(message)
        conn, cursor = get_cursor()
        text = message.text
        now = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

        if text.isdigit() and 99 < int(text) < 221:
            height = int(text)
            cursor.execute('UPDATE Users SET last_interaction_time = ?, height = ? WHERE user_id = ?',
                           [now, height, user_id])
            conn.commit()
            message_text = 'üìå*–£–∫–∞–∂–∏—Ç–µ –≤–∞—à —É—Ä–æ–≤–µ–Ω—å —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:*\n\n' \
                           '1: –ú–∞–ª–æ–ø–æ–¥–≤–∏–∂–Ω—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ (—Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–µ—Ç / —Ç—Ä–µ–Ω–∏—Ä—É—é—Å—å –æ—á–µ–Ω—å —Ä–µ–¥–∫–æ)\n' \
                           '2: –ù–µ–±–æ–ª—å—à–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (1-3 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –Ω–µ–¥–µ–ª—é)\n' \
                           '3: –£–º–µ—Ä–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (3-5 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –Ω–µ–¥–µ–ª—é)\n' \
                           '4: –í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (6-7 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –Ω–µ–¥–µ–ª—é)\n' \
                           '5: –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (—Ç—è–∂–µ–ª—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 6-7 –¥–Ω–µ–π –≤ –Ω–µ–¥–µ–ª—é)'
            markup = ReplyKeyboardMarkup(resize_keyboard=True)
            button1 = KeyboardButton('1')
            button2 = KeyboardButton('2')
            button3 = KeyboardButton('3')
            button4 = KeyboardButton('4')
            button5 = KeyboardButton('5')
            markup.row(button1, button2, button3, button4, button5)
            sent_message = bot.send_message(user_id, message_text, reply_markup=markup, parse_mode='Markdown')
            cursor.execute('UPDATE Users SET last_bot_message_id = ?, last_bot_message_type = ? WHERE user_id = ?',
                           [sent_message.message_id, 'text', user_id])
            conn.commit()
            bot.set_state(user_id, States.enter_activity_level, chat_id)
        else:
            sent_message = bot.send_message(user_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–æ—Å—Ç –≤ —Å–º –æ—Ç 100 –¥–æ 220 (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ).')
            cursor.execute('UPDATE Users SET last_bot_message_id = ?, last_bot_message_type = ? WHERE user_id = ?',
                           [sent_message.message_id, 'text', user_id])
            conn.commit()
    except Exception as E:
        bot.send_message(305896408, f'–û—à–∏–±–∫–∞! {E}')


@bot.message_handler(state=States.enter_activity_level)
def get_activity_level(message: Message):
    try:
        user_id, chat_id = get_id(message)
        conn, cursor = get_cursor()
        text = message.text
        now = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

        if text.isdigit() and int(text) in [1, 2, 3, 4, 5]:
            activity_level = int(text)
            cursor.execute(
                'UPDATE Users SET last_interaction_time = ?, activity_level = ? WHERE user_id = ?',
                [now, activity_level, user_id])
            conn.commit()
            sent_message = bot.send_message(user_id, '*–ò —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ...*\n\nüìù –û–ø–∏—à–∏—Ç–µ –≤–∫—Ä–∞—Ç—Ü–µ, —á—Ç–æ –≤–∞—Å '
                                                     '*–±–µ—Å–ø–æ–∫–æ–∏—Ç –∏ –∫–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç* –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –ø–æ–ª—É—á–∏—Ç—å '
                                                     '–æ—Ç —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –ò–±—Ä–∞—Ç–æ–º?\n\n'
                                                     '(–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–µ–∫—Å—Ç —Å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ –≤–æ–ø—Ä–æ—Å):',
                                            reply_markup=ReplyKeyboardRemove(), parse_mode='Markdown')
            cursor.execute('UPDATE Users SET last_bot_message_id = ?, last_bot_message_type = ? WHERE user_id = ?',
                           [sent_message.message_id, 'text', user_id])
            conn.commit()
            bot.set_state(user_id, States.describe_problem, chat_id)
        else:
            sent_message = bot.send_message(user_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (—á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5).')
            cursor.execute('UPDATE Users SET last_bot_message_id = ?, last_bot_message_type = ? WHERE user_id = ?',
                           [sent_message.message_id, 'text', user_id])
            conn.commit()
    except Exception as E:
        bot.send_message(305896408, f'–û—à–∏–±–∫–∞! {E}')


@bot.message_handler(state=States.describe_problem)
def describe_problem(message: Message):
    try:
        user_id, chat_id = get_id(message)
        conn = sqlite3.connect('users.db')
        conn.row_factory = sqlite3.Row
        cursor = conn.cursor()
        text = message.text

        cursor.execute('UPDATE Users SET problem = ? WHERE user_id = ?', [text, user_id])
        now = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
        cursor.execute('UPDATE Users SET notified = ? WHERE user_id = ?', [2, user_id])
        conn.commit()

        official_photo = 'AgACAgIAAxkBAAMhZIICQ7oDNVB64dzT_URs8HLO96IAAjPLMRu1rxFIwmwTchHLlJMBAAMCAAN5AAMvBA'
        test_photo = 'AgACAgIAAxkBAAIGW2Sv1qiouuWd327DKFUt9NLwHp0RAAIlyjEbIj6ASWDi6EmRg_ZgAQADAgADeQADLwQ'

        bot.send_photo(user_id,
                       photo=official_photo,
                       caption='–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!\n\n'
                               '*–ò–±—Ä–∞—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.*\n\n'
                               '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ 21FIT! ‚ù£Ô∏è\n–ï—â–µ —É–≤–∏–¥–∏–º—Å—è!', parse_mode='Markdown')

        cursor.execute('SELECT * FROM Users WHERE user_id = ?', (user_id,))
        user_info = cursor.fetchone()

        username = user_info['username'] if user_info['username'] is not None else "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        text = f"üßæ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞, –ë–æ—Å—Å!\n\n" \
               f"*–ò–º—è:* {user_info['name']}\n" \
               f"*–ü–æ–ª:* {user_info['gender']}\n" \
               f"*–¢–µ–ª–µ—Ñ–æ–Ω:* {user_info['phone']}\n" \
               f"*–í–æ–∑—Ä–∞—Å—Ç:* {user_info['age']}\n" \
               f"*–í–µ—Å:* {user_info['weight']}\n" \
               f"*–†–æ—Å—Ç:* {user_info['height']}\n" \
               f"*–§–∏–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:* {activity_levels[user_info['activity_level']]}\n" \
               f"*–ü—Ä–æ–±–ª–µ–º–∞:* {user_info['problem']}\n" \
               f"*Username:* @{username}" \
               f"\n\n–†–∞–¥–∞ –±—ã–ª–∞ –ø–æ–º–æ—á—å!\n–° –ª—é–±–æ–≤—å—é, –õ–∏–∑–∞‚ù£Ô∏è"
        bot.send_message(305896408, text=text, parse_mode='Markdown')
        bot.send_message(58790442, text=text, parse_mode='Markdown')
        bot.send_message(6553857524, text=text, parse_mode='Markdown')
        bot.send_message(96595636, text=text, parse_mode='Markdown')

        bot.set_state(user_id, States.START, chat_id)
    except Exception as E:
        bot.send_message(305896408, f'–û—à–∏–±–∫–∞! {E}')


# @bot.message_handler(content_types=['voice'])
# def handle_voice(message):
#     file_id = message.voice.file_id
#     print(f"Received voice with id: {file_id}", )
#     bot.send_voice(message.chat.id, file_id)
#     bot.send_message(message.from_user.id, f"Received voice with id: {file_id}")


# @bot.message_handler(content_types=['photo'])
# def handle_photo(message):
#     file_id = message.photo[-1].file_id
#     bot.send_message(message.from_user.id, f"Received photo with id: {file_id}")
#     print(f"Received photo with id: {file_id}")
#     bot.send_photo(message.chat.id, file_id)


bot.add_custom_filter(custom_filters.StateFilter(bot))
