from telebot.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove
from telebot import types, custom_filters
import pytz
from geopy.geocoders import Nominatim
from timezonefinder import TimezoneFinder
from ...loader import bot
from ..mainmenu import just_main_menu, paid_user_main_menu, create_keyboard_markup, get_id
from ...models import PaidUser
from ...states import GeopositionStates, CourseInteraction


def start_timezone_check(message):
    user_id, chat_id = get_id(message=message)
    markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    location_button = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ",
                                           request_location=True)
    skip_button = types.KeyboardButton(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
    markup.add(location_button, skip_button)

    pht = 'AgACAgIAAxkBAAEBKgNk4LHizLxJTIHWapQLr7yovpEDuAAC8tIxGyH1AAFL2mf0ocdGuqcBAAMCAAN5AAMwBA'

    bot.send_message(chat_id=user_id,
                   text="*–ì–µ–æ‚Ä¶*\n\n–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–∏–º –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —á–∞—Å–æ–≤–æ–≥–æ "
                           "–ø–æ—è—Å–∞ ‚è±\n\n–¢–∞–∫, –º—ã —Å–º–æ–∂–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞–º *–≤–∞–∂–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∏*",
                   reply_markup=markup,
                   parse_mode='Markdown')
    bot.set_state(user_id, GeopositionStates.initial, chat_id)


def final_message(user_id, chat_id):
    txt = 'üî• *–£—Ä–∞! –í—ã –ø—Ä–æ—à–ª–∏ –≤—Å–µ —ç—Ç–∞–ø—ã*\n\n–¢–µ–ø–µ—Ä—å –º—ã —Å–º–æ–∂–µ–º –ø–æ–¥–æ–±—Ä–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ø–∏—Ç–∞–Ω–∏—è –∏ ' \
          '–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ª–∏—á–Ω–æ –ø–æ–¥ –≤–∞—Å!\n\n- –ß—Ç–æ –¥–∞–ª—å—à–µ?\n- –£–∑–Ω–∞–µ—Ç–µ –Ω–∞ –ø–µ—Ä–≤–æ–º —ç—Ñ–∏—Ä–µ'
    pht = 'AgACAgIAAxkBAAEBKgABZOCxOvu_bwABhiQ3LmwCtQPAC9GJAALv0jEbIfUAAUulCGJFtIWWAgEAAwIAA3kAAzAE'

    markup = create_keyboard_markup('–ú–æ–π –¥–Ω–µ–≤–Ω–∏–∫ –∫–∞–ª–æ—Ä–∏–π üìÜ',
                                    '–°–∫–æ–ª—å–∫–æ –µ—â–µ –º–æ–∂–Ω–æ –∫–∫–∞–ª?üëÄ', '–ö–∞—Ä—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã üó∫', '–ü–æ—è–≤–∏–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å–∏–∫–∏...')
    bot.set_state(user_id, CourseInteraction.initial, chat_id)

    bot.send_photo(chat_id=user_id,
                   caption=txt,
                   photo=pht,
                   parse_mode='Markdown',
                   reply_markup=markup)


@bot.message_handler(state=GeopositionStates.initial, content_types=['location'])
def handle_location(message):
    user_id, chat_id = get_id(message=message)
    latitude = message.location.latitude
    longitude = message.location.longitude
    timezone_finder = TimezoneFinder()
    timezone_name = timezone_finder.timezone_at(lng=longitude, lat=latitude)
    timezone = pytz.timezone(timezone_name)
    PaidUser.objects.filter(user=user_id).update(timezone=timezone)
    bot.send_message(user_id, f"–í–∞—à —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {timezone}")
    final_message(chat_id)


@bot.message_handler(func=lambda message: message.text == '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å')
def skip_location(message):
    user_id, chat_id = get_id(message=message)
    default_timezone = pytz.timezone("Europe/Moscow")
    bot.send_message(message.chat.id, f"–í–∞—à —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {default_timezone}")
    PaidUser.objects.filter(user=user_id).update(timezone=default_timezone)
    final_message(user_id, chat_id)


bot.add_custom_filter(custom_filters.StateFilter(bot))
